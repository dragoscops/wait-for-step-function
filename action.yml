name: wait-for-step-function
description: Waits for a step function to run
inputs:
  name:
    description: Name of the step function
    required: true
  filter:
    description: JSON Object containing the input filters
    required: true
  timeout:
    description: Timeout value (in seconds) to wait for the step function to run. Default 3600
    required: false
    default: 3600
  wait_interval: 
    description: Interval (in seconds) to trigger the check for the step function. Default 15
    required: false
    default: 15
  debug: 
    description: Debug
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Wait for Step Function Execution
      shell: bash
      run: |        
        set -e  # Exit immediately if a command exits with a non-zero status.

        if [[ ${{ inputs.debug }} == "true" ]]; then
          set -ex

          export DEBUG=1
        fi

        # Initialize an empty array for filters
        filters=()

        # Convert JSON object into --filter key=value arguments
        while IFS= read -r line; do
          key=$(echo "$line" | cut -d'=' -f1)
          value=$(echo "$line" | cut -d'=' -f2-)
          # Append to the filters array
          filters+=(--filter "$key=$value")
        done < <(echo "${{ inputs.filter }}" | jq -r 'to_entries[] | "\(.key)=\(.value)"')

        echo "Constructed filters: ${filters[*]}"

        # Execute the monitoring script with the constructed arguments
        bash "${{ github.action_path }}/wait-for-step-function.sh" \
          --name "${{ inputs.name }}" \
          "${filters[@]}" \
          --timeout "${{ inputs.timeout }}" \
          --wait-interval "${{ inputs.wait_interval }}"
